name: Notify tracker repo on push

on:
  push:
    branches: [ main, master ]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare payload
        id: payload
        run: |
          # Build a JSON client_payload using jq (robust quoting)
          payload=$(jq -n \
            --arg repo "${GITHUB_REPOSITORY}" \
            --arg branch "${GITHUB_REF_NAME:-$(echo ${GITHUB_REF} | sed 's#refs/heads/##')}" \
            --arg sha "${GITHUB_SHA:0:7}" \
            --arg actor "${GITHUB_ACTOR}" \
            '{source_repo:$repo, source_branch:$branch, source_commit:$sha, actor:$actor}')
          echo "PAYLOAD=$payload" >> $GITHUB_OUTPUT

      - name: Send dispatch to tracker repo (and verify)
        env:
          TRACKER_REPO: "siddhantpatni0407/GitHub-Repo-Tracker"  # change if needed
          TRACKER_REPO_PAT: ${{ secrets.TRACKER_REPO_PAT }}
        run: |
          set -euo pipefail
          payload="${{ steps.payload.outputs.PAYLOAD }}"
          echo "Sending payload to $TRACKER_REPO:"
          echo "$payload"

          # Compose final JSON body: { "event_type":"repo_changed", "client_payload": <payload> }
          body=$(jq -n --arg et "repo_changed" --argjson cp "$payload" '{event_type: $et, client_payload: $cp}')
          echo "BODY: $body"

          # POST and capture HTTP status
          response=$(curl -s -w "%{http_code}" -o /tmp/notify_result -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${TRACKER_REPO_PAT}" \
            "https://api.github.com/repos/${TRACKER_REPO}/dispatches" \
            -d "$body" || true)

          echo "HTTP status: $response"
          if [ "$response" != "204" ]; then
            echo "Dispatch failed. Response body:"
            cat /tmp/notify_result || true
            exit 1
          fi

          echo "Dispatch succeeded."
